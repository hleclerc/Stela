// Generated by CoffeeScript 1.4.0
var Model;

Model = (function() {

  Model.__counter = 0;

  Model.__modlist = new WeakSet;

  Model.__n_views = {};

  Model.__timeout = void 0;

  Model.__force_m = false;

  Model.__id_map = new WeakMap;

  Model.__cur_id = 1;

  function Model(__ptr, parent) {
    this.__ptr = __ptr != null ? __ptr : asm_mod.allocate(1);
    if (parent != null) {
      this.__parent = parent;
    }
  }

  Object.defineProperty(Model.prototype, "attr_names", {
    get: function() {
      return [];
    }
  });

  Model.prototype.bind = function(f, onchange_construction) {
    var views;
    if (onchange_construction == null) {
      onchange_construction = true;
    }
    if (f instanceof View) {
      views = this.__container.__views;
      if (views.indexOf(f) < 0) {
        views.push(view);
      }
      if (onchange_construction) {
        Model.__n_views[f.view_id] = f;
        return Model._need_sync_views();
      }
    } else {
      return new FunctionBinder(this, onchange_construction, f);
    }
  };

  Model.prototype._signal_change = function(change_level) {
    var p, _i, _len, _ref;
    if (change_level == null) {
      change_level = 2;
    }
    Model.__modlist[this.__id] = this;
    if (!(this.__orig.__modified_attributes[this.__numsub] != null) || this.__orig.__modified_attributes[this.__numsub] < change_level) {
      this.__orig.__modified_attributes[this.__numsub] = change_level;
    }
    if (this.__orig.__date_last_modification <= Model.__counter) {
      this.__orig.__date_last_modification = Model.__counter + change_level;
      _ref = this.__orig.__parents;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        p = _ref[_i];
        p._signal_change(1);
      }
    }
    return Model._need_sync_views();
  };

  Object.defineProperty(Model.prototype, "__container", {
    get: function() {
      if (this.parent != null) {
        return this.parent.__container;
      } else {
        this.__add_mv_attr();
        return this;
      }
    }
  });

  Model.prototype.__add_mv_attr = function(view) {
    if (this.__views != null) {
      return;
    }
    this.__views = [];
    this.__id = 0;
    return this.__date_last_modification = 0;
  };

  return Model;

})();
