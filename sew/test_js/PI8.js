// Generated by CoffeeScript 1.4.0
var PI8,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

PI8 = (function(_super) {
  var am;

  __extends(PI8, _super);

  am = asm_mod.push(function(stdlib, foreign, buffer) {
    "use asm";

    var get_val, set_val, size_in_bits, values;
    values = new stdlib.Uint8Array(buffer);
    size_in_bits = function(start) {
      start = start | 0;
      return 8;
    };
    get_val = function(start) {
      start = start | 0;
      return values[start] | 0;
    };
    set_val = function(start, val) {
      start = start | 0;
      val = val | 0;
      return values[start] = val;
    };
    return {
      size_in_bits: size_in_bits,
      get_val: get_val,
      set_val: set_val
    };
  });

  function PI8(offset) {
    PI8.__super__.constructor.call(this, offset);
  }

  Object.defineProperty(PI8.prototype, "size_in_bits", {
    get: function() {
      return am.size_in_bits(this.offset);
    }
  });

  Object.defineProperty(PI8.prototype, "val", {
    get: function() {
      return am.get_val(this.offset);
    },
    set: function(val) {
      if (typeof this.__sig_change === "function") {
        this.__sig_change();
      }
      return am.set_val(this.offset, val);
    }
  });

  return PI8;

})(Model);
