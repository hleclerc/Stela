// Generated by CoffeeScript 1.4.0
var asm_mod;

asm_mod = {
  modules: [],
  functions: {},
  heap: new ArrayBuffer(0x10000000),
  global: typeof window !== "undefined" && window !== null ? window : global,
  heap_size: function() {
    return this.heap.byteLength;
  },
  push: function(module) {
    var res, v, _i, _len;
    this.modules.push(module);
    res = module(this.global, null, this.heap);
    for (_i = 0, _len = res.length; _i < _len; _i++) {
      v = res[_i];
      this.functions[v] = res[v];
    }
    return res;
  },
  resize_heap: function(new_size) {
    var module, old_heap, res, v, _i, _len, _ref, _results;
    old_heap = this.heap;
    this.heap = new ArrayBuffer(new_size);
    new Uint8Array(this.heap, 0, old_heap.byteLength).set(new Uint8Array(old_heap));
    _ref = this.modules;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      module = _ref[_i];
      res = module(this.global, null, this.heap);
      _results.push((function() {
        var _results1;
        _results1 = [];
        for (v in res) {
          _results1.push(this.functions[v] = res[v]);
        }
        return _results1;
      }).call(this));
    }
    return _results;
  }
};
