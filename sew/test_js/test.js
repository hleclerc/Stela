// Generated by CoffeeScript 1.4.0
var MyView, a, v,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

a = new PI8(0);

console.log(a.size_in_bits);

console.log(a.val);

a.val = 17;

console.log(a.val);

MyView = (function(_super) {

  __extends(MyView, _super);

  function MyView() {
    return MyView.__super__.constructor.apply(this, arguments);
  }

  MyView.prototype.onchange = function() {
    return console.log("pouet");
  };

  return MyView;

})(View);

v = new MyView(a);

a.val = 10;
