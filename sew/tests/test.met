def add a, b
    ___add a, b

def not_boolean v
    ___not_boolean v
    
def inferior a, b
    ___inf a, b
    
class SI32
    ___set_base_size 32
    ___set_base_alig 32
    def init val
        ___reassign_rec self, val
    def reassign val
        ___reassign_rec self, val

void := 1

class Ptr[ T ]
    adress := 0l

class Block[ sourcefile, tok, catched_vars_type, names ]
    catched_vars ~= catched_vars_type
    def apply val
        ___block_exec self, val

def init self
    # nothing to do
    
def typeof val
    ___typeof val

class Range[ TB, TE, TI ]
    beg ~= TB
    end ~= TE
    inc ~= TI
    def init( b, e, i ) starts_with beg( b ), end( e ), inc( i )
        #
    def __for__ block
        block 117
    
def range a, b
    Range[ typeof( a ), typeof( b ), typeof( a ) ]( a, b, 1 )

class A[ T, U ]
    a := 10
    
def foor
    croute := 2
    # for i in 0 .. 10
        # ___info croute + i
    def s
        croute + 4
    ___info s()
foor()
# for a in 0 .. 10
    # ___syscall a
